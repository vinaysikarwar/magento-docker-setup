services:
  mysql:
    image: mysql:8.0
    container_name: magento-mysql
    volumes:
      - db-data:/var/lib/mysql:rw
    networks:
      - magento
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento

  nginx:
    image: nginx:1.21
    container_name: magento-nginx
    ports:
      - "80:80"
      - "443:443"  # Expose HTTPS port
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./magento:/var/www/html
      - ./certs:/etc/nginx/ssl  # Mount certificates
    networks:
      - magento
    depends_on:
      - php
      - mysql
      - redis
      - elasticsearch

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: magento-php
    volumes:
      - ./magento:/var/www/html
    networks:
      - magento
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    depends_on:
      - mysql
      - redis
      - elasticsearch

  redis:
    image: redis:6.2
    container_name: magento-redis
    networks:
      - magento
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: magento-elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - magento
    ports:
      - "9200:9200"

volumes:
  db-data:

networks:
  magento:
    driver: bridge
